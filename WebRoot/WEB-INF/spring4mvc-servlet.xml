<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    
    <!-- 启用spring mvc 注解-->
   	<mvc:annotation-driven>
		<!-- 启动JSON格式的配置 -->
   		<mvc:message-converters>  
   		<!-- 这里也可以自己定制class -->
        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
            <property name="supportedMediaTypes">  
                <list>  
                    <value>text/html;charset=UTF-8</value>  <!-- 避免IE出现下载JSON文件的情况 -->
                </list>  
            </property>    
        </bean>  
    	</mvc:message-converters>  
   	</mvc:annotation-driven>
   	<mvc:resources location="/images/" mapping="/images/**"/>
   	<mvc:resources location="/fonts/" mapping="/fonts/**"/> 
	<mvc:resources location="/js/" mapping="/js/**"/>  
	<mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:default-servlet-handler />
	 
	<!-- 自动扫描的包名 ，使Spring支持自动检测组件，如注解的Controller-->
    <context:component-scan base-package="com.lcf.controller" />
    <context:component-scan base-package="com.lcf.service"/>
    
	
	<!-- 视图解析器:定义跳转的文件的前后缀 -->  
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />  <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
    </bean> 
    <!--<mvc:view-controller path="/" view-name="forward:/views/index.jsp"/>  -->
    
    
    <!-- 缓存配置(两种) -->  
    <!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->  
    <cache:annotation-driven cache-manager="cacheManager"/>  
    <!-- Spring自己的基于java.util.concurrent.ConcurrentHashMap实现的缓存管理器(该功能是从Spring3.1开始提供的) -->  
    <!--   
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                <bean name="myCache" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>  
            </set>  
        </property>  
    </bean>  
     -->  
    <!-- 若只想使用Spring自身提供的缓存器,则注释掉下面的两个关于Ehcache配置的bean,并启用上面的SimpleCacheManager即可 -->  
    <!-- Spring提供的基于的Ehcache实现的缓存管理器 -->  
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml"/>  
    </bean>  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
        <property name="cacheManager" ref="cacheManagerFactory"/>  
    </bean> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="defaultEncoding" value="UTF-8" />
         <!-- 指定所上传文件的总大小,单位字节。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
         <property name="maxUploadSize" value="10240000" />
    </bean>
    <mvc:interceptors>
         <mvc:interceptor>
             <mvc:mapping path="/user/submit"/>
             <mvc:mapping path="/user/submitDet"/>
             <mvc:mapping path="/user/submitSot"/>
             <mvc:mapping path="/user/submitMOt"/>
             <mvc:mapping path="/user/yourResults"/>
             <bean class="com.lcf.interceptor.CommonInterceptor"></bean>
         </mvc:interceptor>
         <mvc:interceptor>
             <mvc:mapping path="/manage/**"/>
             <mvc:exclude-mapping path="/manage/admin-login"/>
             <mvc:exclude-mapping path="/manage/forwardLogin"/>
             <bean class="com.lcf.interceptor.ManagerInterceptor"></bean>
         </mvc:interceptor>
   	</mvc:interceptors>
</beans>   